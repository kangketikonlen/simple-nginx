on:
  push:
    branches:
      - "stable"

env:
  image_name: ${{ github.event.repository.name }}

name: 📜 Test, pack & ship!
jobs:
  build:
    name: 📦 Build the app
    runs-on: ubuntu-latest
    outputs:
      latest_version: ${{steps.push-image.outputs.version}}
    steps:
      - name: 🐙 Git checkout
        uses: actions/checkout@v4
      - name: 📁 Make sure repository is latest
        run: git fetch --prune --unshallow
      - name: 🐳 Build image
        run: docker build . --file Dockerfile --tag $image_name --label "runnumber=${GITHUB_RUN_ID}"
      - name: 🔑 Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - id: push-image
        name: 🛳️ Push image
        run: |
          image_id=ghcr.io/${{ github.repository_owner }}/$image_name
          image_id=$(echo $image_id | tr '[A-Z]' '[a-z]')
          latest_tag=latest
          echo image_id=$image_id
          echo latest_tag=$latest_tag
          echo "version=$latest_tag" >> $GITHUB_OUTPUT
          docker tag $image_name $image_id:$latest_tag
          docker push $image_id:$latest_tag
  tagging:
    needs: [build]
    name: 🏷️ Tagging the app
    runs-on: ubuntu-latest
    steps:
      - name: 🐙 Git checkout
        uses: actions/checkout@v4
      - name: 📁 Make sure repository is latest
        run: git fetch --prune --unshallow
      - name: 🔖 Create tag
        uses: kangketikonlen/base-tagging@main
        env:
          REPO_NAME: ${{ github.event.repository.name }}
          REPO_TYPE: ${{ github.event.repository.owner.type }}
          REPO_OWNER: ${{ github.event.repository.owner.name }}
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PRESERVE_VERSION: 5
